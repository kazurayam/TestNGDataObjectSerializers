plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

group = 'com.kazurayam'
version = "0.1.0-SNAPSHOT"

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

repositories {
    mavenCentral()
}

dependencies {

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    // Use TestNG framework, also requires calling test.useTestNG() below
    implementation 'org.testng:testng:7.10.2'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.13'
    testImplementation 'org.slf4j:slf4j-simple:2.0.13'

    // https://mvnrepository.com/artifact/com.kazurayam/unittest-helper
    testImplementation 'com.kazurayam:unittest-helper:0.4.1'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.19.1'

    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.8.0'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}

publishing {
    publications {
        testngserializers(MavenPublication) {
            from components.java
            artifactId = 'testng-dataobject-serializers'
            pom {
                groupId = project.group
                name = project.rootProject.name
                description = 'A set of TestNG Data Object Serializers, such as ITestContext and ITestResult'
                url = 'https://github.com/kazurayam/TestNGDataObjectSerializers'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kazurayam'
                        name = 'URAYAMA,kazuaki'
                        email = 'kazuaki.urayama@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:kazurayam/TestNGDataObjectSerializers.git'
                    developerConnection = 'scm:git:ssh@github.com:kazurayam/TestNGDataObjectSerializers.git'
                    url = 'https://github.com/kazurayam/TestNGDataObjectSerializers'
                }
            }
            repositories {
                maven {
                    def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                    url = isReleaseVersion ? releaseRepo: snapshotRepo
                    credentials {
                        username = project.hasProperty("ossrhUsername") ? ossrhUsername : "Unknown user"
                        password = project.hasProperty("ossrhPassword") ? ossrhPassword : "Unknown password"
                    }
                }
            }
        }
    }

}